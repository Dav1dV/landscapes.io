

THE system HAS data => system.data
THE system HAS features THAT VIEW data => read
THE system HAS features THAT CHANGE data => write
THE system HAS features THAT EXECUTE data => execute
THE system HAS roles => owner, administrator, manager

THE system HAS 1:n organization OBJECTS
THE system HAS 1:1 ROOT organization OBJECTS => parentId:null
THE ROOT organization HAS 1:n ROOT user OBJECTS => user.role:owner

AN organization HAS 0:n CHILD organization OBJECTS

AN organization HAS data => organization.data
AN organization HAS 1:n users

A user IN ONE organization CAN NOT ACCESS data IN ANOTHER organization
EXCEPT, A user IN A PARENT organization CAN ACCESS data IN A CHILD organization

THE system HAS roles (https://www.npmjs.org/package/acl)


AN organization LIMITS user ACCESS TO data BASED ON user.role

A user HAS 0:1 role IN AN organization


	... createdOn: dateTime
	... createdBy: <<User>>


organizations
+ id
+ parentId
+ name
+ users: [<<User>>]


users
+ id
+ name
+ emailAddress
+ roles: {<<Organization>> : <<Role>>}



THE system HAS 0:n deploymentTemplate OBJECTS
THE system HAS 0:n ROOT deploymentTemplate OBJECTS => parentId:null


deploymentTemplates
+ id
+ parentId
+ organizationId
+ name
+ description
+ imageUri
+ jsonUri


deployments
+ id
+ deploymentTemplateId
+ organizationId
+ status